import pylab as pl
import math
import numpy as np
import sys
import os
from matplotlib import pyplot as plt
import subprocess
import matplotlib.ticker as mticker
from matplotlib.ticker import ScalarFormatter

plt.figure(figsize=(8,3))
plt.ylabel("Autocorrelation\n(fairshare rate)", fontsize=17)
plt.xlabel("Feedback Delay (us)", fontsize=17)

#x=[0,1,2,4,6,8,10,12,16,20,28,36,44,52,60]
x = [0,1,2,4,8,12,16, 20, 24, 28, 32]
#y=[1.0, 0.87179144372651052, 0.84070218414426012, 0.82652655492259897, 0.81910835668026094, 0.81055831810433343, 0.80216750185818853, 0.79438273028358997, 0.78285889911613316, 0.7740772700050903, 0.75737627369808347, 0.74610236127948304, 0.73770655283008657, 0.72927951187620299, 0.72066675050815954]
y = [1.0, 0.97293610228635452, 0.96864809491654702, 0.96080763309455774, 0.94846898794895129, 0.93749590562571095, 0.92895965193715635, 0.92184664972211827, 0.91316886531832275, 0.90705998677472532, 0.90197645610766353]
plt.plot(x,y, '-.', color='green', label="10Gbps")
#y=[1.0, 0.84003902059104618, 0.82329433692476039, 0.79762828482074077, 0.78057471097572906, 0.76829388560335554, 0.75672387067387448, 0.74823804318834142, 0.73296815174601204, 0.72251176901243275, 0.70304855648066722, 0.68599365240588095, 0.6711633481029049, 0.66164326435655008, 0.65132995442449948]
y = [1.0, 0.97459197036260659, 0.97192436924274295, 0.9681746371127059, 0.96465256581531811, 0.95939154187834275, 0.95474804119805556, 0.95138892206718029, 0.94668426336900835, 0.94501684174290712, 0.93845526748469144]
plt.plot(x,y, '-', color='blue',label="40Gbps")
#y=[1.0, 0.81767069409380277, 0.79045495176378888, 0.75930969088366362, 0.73891508485760038, 0.72339269432695352, 0.70910352053333814, 0.69536814851287121, 0.6759963062595995, 0.65875716593091349, 0.63392930100588885, 0.61586156384922464, 0.60765612239945821, 0.60051522648277966, 0.58867593435327314]
y = [1.0, 0.97293610228635452, 0.96864809491654702, 0.96080763309455774, 0.94846898794895129, 0.93749590562571095, 0.92895965193715635, 0.92184664972211827, 0.91316886531832275, 0.90705998677472532, 0.90197645610766353]
plt.plot(x,y,'--', color='red',label="100Gbps")



ax = plt.axes()
for tick in ax.xaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax.yaxis.get_major_ticks():
	tick.label.set_fontsize(14)
plt.legend(bbox_to_anchor=(0.1, 1.02, 0.8, 1.02), loc=3, ncol=3, mode="expand", borderaxespad=0., prop={'size': 16}, frameon=False)
plt.tight_layout()
plt.ylim([0,1])
#plt.xlim([0,60])


# plt.figure(figsize=(8,3))
# plt.ylabel("CDF", fontsize=17)
# plt.xlabel("Queue Length(us)", fontsize=17)
# plt.ylim([0.0,1.03])
# #plt.xlim([0,70])

# CDF = [0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.3,0.31,0.32,0.33,0.34,0.35,0.36,0.37,0.38,0.39,0.4,0.41,0.42,0.43,0.44,0.45,0.46,0.47,0.48,0.49,0.5,0.51,0.52,0.53,0.54,0.55,0.56,0.57,0.58,0.59,0.6,0.61,0.62,0.63,0.64,0.65,0.66,0.67,0.68,0.69,0.7,0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.8,0.81,0.82,0.83,0.84,0.85,0.86,0.87,0.88,0.89,0.9,0.91,0.92,0.93,0.94,0.95,0.96,0.97,0.98,0.99, 1.0]
# Buffer_Size = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1020,1020,1020,1020,1020,2040,2040,2040,2040,2040,2040,2040,2040,2040,2040,2040,2040,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,4080,4080,4080,4080,4080,4080,4080,4080,4080,4080,4080,4080,4080,4080,4080,4080,4080,5100,5100,5100,5100,5100,6120,6120,6120,7140,7140,7140,7140,8160,8160,8160,8160,8160,9180,9180,9180,10200,10200,11220,21420]
# Buffer_Size = np.array(Buffer_Size)
# plt.plot(Buffer_Size/(1275.0), CDF,  '-.', color='green', label="10Gbps")


# Buffer_Size = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1020,1020,2040,3060,4080,5100,6120,6120,7140,8160,8160,9180,9180,9180,10200,10200,10200,10200,10200,11220,11220,11220,11220,11220,11220,11220,11220,12240,12240,12240,12240,12240,12240,12240,12240,12240,12240,12240,13260,13260,13260,13260,13260,13260,13260,13260,13260,14280,14280,14280,14280,14280,14280,14280,14280,15300,15300,15300,15300,16320,16320,17340,18360,18360,18360,19380,19380,20400,21420,21420,22440,22440,23460,23460,24480,26520,29580,30600,89760]
# Buffer_Size = np.array(Buffer_Size)
# plt.plot(Buffer_Size/(4.0*1275.0), CDF,'-', color='blue',label="40Gbps")

# Buffer_Size = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1020,1020,1020,2040,6120,9180,12240,15300,16320,18360,18360,19380,20400,21420,22440,22440,23460,24480,24480,25500,25500,26520,26520,26520,27540,27540,27540,27540,28560,28560,28560,28560,29580,29580,29580,29580,29580,30600,30600,30600,30600,30600,31620,31620,31620,31620,31620,32640,32640,32640,33660,33660,33660,33660,34680,34680,35700,35700,35700,36720,37740,38760,38760,38760,39780,40800,42840,45900,47940,48960,49980,51000,53040,54060,56100,58140,228480]
# Buffer_Size = np.array(Buffer_Size)
# plt.plot(Buffer_Size/(10.0*1275.0), CDF,'--', color='red',label="100Gbps")


# ax = plt.axes()
# for tick in ax.xaxis.get_major_ticks():
# 	tick.label.set_fontsize(14)
# for tick in ax.yaxis.get_major_ticks():
# 	tick.label.set_fontsize(14)
# plt.legend(bbox_to_anchor=(0.1, 1.02, 0.8, 1.02), loc=3, ncol=3, mode="expand", borderaxespad=0., prop={'size': 16}, frameon=False)
# plt.tight_layout()

plt.figure(figsize=(8,3))
plt.ylabel("CDF", fontsize=17)
plt.xlabel("Queue Length (us)", fontsize=17)
plt.ylim([0.0,1.03])
#plt.xlim([0,70])

CDF = [0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.3,0.31,0.32,0.33,0.34,0.35,0.36,0.37,0.38,0.39,0.4,0.41,0.42,0.43,0.44,0.45,0.46,0.47,0.48,0.49,0.5,0.51,0.52,0.53,0.54,0.55,0.56,0.57,0.58,0.59,0.6,0.61,0.62,0.63,0.64,0.65,0.66,0.67,0.68,0.69,0.7,0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.8,0.81,0.82,0.83,0.84,0.85,0.86,0.87,0.88,0.89,0.9,0.91,0.92,0.93,0.94,0.95,0.96,0.97,0.98,0.99, 1.0]
Buffer_Size = [0,0,0,0,0,0,0,0,0,0,0,0,0,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,1020,2040,2040,2040,2040,2040,2040,2040,2040,2040,2040,2040,2040,2040,2040,2040,2040,2040,2040,2040,2040,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,4080,4080,4080,4080,4080,4080,4080,4080,4080,4080,4080,4080,4080,4080,4080,4080,4080,4080,4080,5100,5100,5100,5100,5100,5100,6120,13260]
Buffer_Size = np.array(Buffer_Size)
plt.plot(Buffer_Size/(1275.0), CDF,  '-.', color='green', label="10Gbps")


Buffer_Size = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1020,1020,1020,1020,1020,1020,1020,2040,2040,2040,3060,4080,4080,5100,5100,6120,6120,6120,7140,7140,7140,8160,8160,8160,9180,9180,9180,9180,10200,10200,10200,10200,10200,11220,11220,11220,11220,11220,11220,11220,11220,12240,12240,12240,12240,12240,12240,12240,12240,12240,12240,13260,13260,13260,13260,13260,13260,13260,13260,13260,14280,14280,14280,14280,14280,14280,15300,15300,15300,15300,16320,16320,17340,17340,19380,22440,31620]
Buffer_Size = np.array(Buffer_Size)
plt.plot(Buffer_Size/(4.0*1275.0), CDF,'-', color='blue',label="40Gbps")

Buffer_Size = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1020,1020,1020,1020,1020,2040,3060,3060,4080,6120,7140,8160,9180,12240,14280,15300,16320,16320,17340,18360,19380,20400,20400,21420,22440,22440,23460,23460,23460,24480,24480,25500,26520,26520,26520,27540,27540,27540,27540,28560,28560,28560,28560,29580,29580,29580,29580,30600,30600,30600,31620,31620,31620,31620,32640,32640,32640,33660,33660,33660,33660,34680,34680,34680,35700,35700,36720,37740,37740,38760,40800,42840,69360]
Buffer_Size = np.array(Buffer_Size)
plt.plot(Buffer_Size/(10.0*1275.0), CDF,'--', color='red',label="100Gbps")


ax = plt.axes()
for tick in ax.xaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax.yaxis.get_major_ticks():
	tick.label.set_fontsize(14)
plt.legend(bbox_to_anchor=(0.1, 1.02, 0.8, 1.02), loc=3, ncol=3, mode="expand", borderaxespad=0., prop={'size': 16}, frameon=False)
ax.axvspan(2.4,2.5,alpha=0.5,color='blue')
plt.xlim([-0.05,4.8])
plt.tight_layout()

plt.figure(figsize=(4,3))
plt.ylabel("CDF", fontsize=17)
plt.xlabel("Queue Delay (us)", fontsize=17)
plt.ylim([0.0,1.03])
#plt.xlim([0,70])

CDF = [0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.3,0.31,0.32,0.33,0.34,0.35,0.36,0.37,0.38,0.39,0.4,0.41,0.42,0.43,0.44,0.45,0.46,0.47,0.48,0.49,0.5,0.51,0.52,0.53,0.54,0.55,0.56,0.57,0.58,0.59,0.6,0.61,0.62,0.63,0.64,0.65,0.66,0.67,0.68,0.69,0.7,0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.8,0.81,0.82,0.83,0.84,0.85,0.86,0.87,0.88,0.89,0.9,0.91,0.92,0.93,0.94,0.95,0.96,0.97,0.98,0.99, 1.0]
Buffer_Size = [0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.816000,0.816000,0.816000,0.816000,1.632000,1.632000,1.632000,1.632000,1.632000,2.448000,2.448000,2.448000,2.448000,2.448000,3.264000,3.264000,3.264000,3.264000,3.264000,3.264000,3.264000,4.080000,4.080000,4.080000,4.080000,4.080000,4.896000,4.896000,4.896000,4.896000,4.896000,4.896000,4.896000,4.896000,4.896000,5.712000,5.712000,5.712000,5.712000,5.712000,6.528000,6.528000,6.528000,6.528000,6.528000,6.528000,6.528000,7.344000,7.344000,7.344000,7.344000,7.344000,8.160000,8.160000,8.160000,8.160000,8.160000,8.160000,8.976000,9.792000,9.792000,9.792000,9.792000,9.792000,11.424000,11.424000,11.424000,12.240000,12.240000,13.056000,13.056000,14.688000,14.688000,16.320000,17.136000,19.584000,20.400000,24.480000,79.968000]
Buffer_Size = np.array(Buffer_Size)
plt.plot(Buffer_Size/(1.0), CDF,  '-.', color='green', label="10Gbps")

Buffer_Size = [0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.204000,0.204000,0.204000,0.204000,0.408000,0.408000,0.408000,0.612000,0.612000,0.816000,0.816000,1.020000,1.224000,1.224000,1.632000,1.632000,1.836000,2.448000,2.448000,2.448000,3.060000,3.264000,3.264000,3.672000,3.672000,4.080000,4.080000,4.284000,4.284000,4.896000,4.896000,4.896000,5.100000,5.508000,5.712000,5.712000,6.120000,6.120000,6.120000,6.528000,6.732000,6.936000,7.140000,7.344000,7.344000,7.344000,8.160000,8.160000,8.568000,8.976000,9.180000,9.792000,9.792000,9.792000,10.200000,11.016000,11.220000,11.424000,12.240000,12.852000,13.464000,14.688000,15.912000,18.360000,22.848000,57.120000]
Buffer_Size = np.array(Buffer_Size)
plt.plot(Buffer_Size/(1.0), CDF,'-', color='blue',label="40Gbps")

Buffer_Size = [0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.081600,0.163200,0.163200,0.163200,0.244800,0.244800,0.244800,0.326400,0.489600,0.489600,0.816000,1.224000,1.468800,1.795200,2.040000,2.284800,2.448000,2.611200,2.856000,2.856000,2.937600,3.264000,3.264000,3.590400,3.672000,4.080000,4.406400,4.488000,4.651200,4.896000,5.222400,5.385600,5.712000,5.875200,6.283200,6.528000,6.854400,6.936000,7.344000,7.425600,7.833600,8.078400,8.486400,8.568000,8.976000,9.139200,9.710400,9.873600,10.444800,10.771200,11.424000,12.240000,12.729600,13.708800,15.422400,17.136000,31.987200]
Buffer_Size = np.array(Buffer_Size)
plt.plot(Buffer_Size/(1.), CDF,'--', color='red',label="100Gbps")


ax = plt.axes()
for tick in ax.xaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax.yaxis.get_major_ticks():
	tick.label.set_fontsize(14)
plt.legend(bbox_to_anchor=(-0.2, 1.02, 1.2, 1.02), loc=3, ncol=2, mode="expand", borderaxespad=0., prop={'size': 16}, frameon=False)
plt.tight_layout()
ax.axvspan(8,8.2,alpha=0.5,color='blue')
plt.xlim([-0.2,16])

plt.figure(figsize=(4,3))
plt.ylabel("CDF", fontsize=17)
plt.xlabel("Queue Delay (us)", fontsize=17)
plt.ylim([0.0,1.03])
#plt.xlim([0,70])

CDF = [0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.3,0.31,0.32,0.33,0.34,0.35,0.36,0.37,0.38,0.39,0.4,0.41,0.42,0.43,0.44,0.45,0.46,0.47,0.48,0.49,0.5,0.51,0.52,0.53,0.54,0.55,0.56,0.57,0.58,0.59,0.6,0.61,0.62,0.63,0.64,0.65,0.66,0.67,0.68,0.69,0.7,0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.8,0.81,0.82,0.83,0.84,0.85,0.86,0.87,0.88,0.89,0.9,0.91,0.92,0.93,0.94,0.95,0.96,0.97,0.98,0.99, 1.0]
Buffer_Size = [0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.816000,0.816000,0.816000,0.816000,1.632000,1.632000,1.632000,1.632000,1.632000,1.632000,2.448000,2.448000,2.448000,2.448000,2.448000,3.264000,3.264000,3.264000,3.264000,3.264000,3.264000,3.264000,4.080000,4.080000,4.080000,4.080000,4.080000,4.080000,4.896000,4.896000,4.896000,4.896000,4.896000,4.896000,4.896000,4.896000,4.896000,5.712000,5.712000,5.712000,5.712000,5.712000,6.528000,6.528000,6.528000,6.528000,6.528000,6.528000,7.344000,7.344000,7.344000,7.344000,7.344000,8.160000,8.160000,8.160000,8.160000,8.160000,8.160000,9.792000,9.792000,9.792000,9.792000,11.424000,11.424000,11.424000,13.056000,13.056000,14.688000,16.320000,17.136000,22.032000,74.256000]
Buffer_Size = np.array(Buffer_Size)
plt.plot(Buffer_Size/(1.0), CDF,  '-.', color='green', label="10Gbps")

Buffer_Size = [0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.204000,0.204000,0.204000,0.408000,0.408000,0.408000,0.408000,0.612000,0.612000,0.816000,0.816000,1.224000,1.224000,1.428000,1.632000,1.632000,2.040000,2.448000,2.448000,2.448000,2.856000,3.060000,3.264000,3.264000,3.672000,3.672000,4.080000,4.080000,4.080000,4.284000,4.896000,4.896000,4.896000,5.100000,5.508000,5.712000,5.712000,6.120000,6.120000,6.528000,6.732000,6.936000,7.140000,7.344000,7.344000,7.344000,7.956000,8.160000,8.160000,8.568000,8.568000,9.180000,9.792000,9.792000,9.996000,10.608000,11.220000,11.424000,12.852000,13.464000,14.688000,17.136000,20.400000,54.264000]
Buffer_Size = np.array(Buffer_Size)
plt.plot(Buffer_Size/(1.0), CDF,'-', color='blue',label="40Gbps")

Buffer_Size = [0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.081600,0.163200,0.163200,0.163200,0.244800,0.244800,0.326400,0.326400,0.489600,0.652800,0.979200,1.224000,1.468800,1.713600,1.958400,2.203200,2.284800,2.448000,2.692800,2.856000,2.937600,2.937600,3.264000,3.427200,3.672000,3.916800,3.916800,4.406400,4.569600,4.896000,5.140800,5.304000,5.548800,5.712000,5.875200,6.201600,6.283200,6.528000,6.854400,7.180800,7.344000,7.833600,8.078400,8.486400,8.812800,9.139200,9.547200,9.792000,10.444800,10.771200,11.424000,12.240000,13.708800,14.688000,16.564800,37.128000]
Buffer_Size = np.array(Buffer_Size)
plt.plot(Buffer_Size/(1.), CDF,'--', color='red',label="100Gbps")


ax = plt.axes()
for tick in ax.xaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax.yaxis.get_major_ticks():
	tick.label.set_fontsize(14)
plt.legend(bbox_to_anchor=(-0.2, 1.02, 1.2, 1.02), loc=3, ncol=2, mode="expand", borderaxespad=0., prop={'size': 16}, frameon=False)
plt.tight_layout()
ax.axvspan(5,5.1,alpha=0.5,color='blue')
plt.xlim([-0.1,10])


#plt.figure(figsize=(8,3))
# plt.ylabel("Difference in \nfairshare rate (%)", fontsize=17)
# plt.xlabel("Feedback Delay (us)", fontsize=17)

# x = [0,1,2,4,8,12,16, 20, 24, 28, 32]

# mean = [0.0, 0.06606071214027058, 0.072908749899746744, 0.075020369656554814, 0.076473741991098493, 0.078822316296989256, 0.084992215672771751, 0.086329734018818313, 0.090555460103532062, 0.098385126933427325, 0.099365481625803706]
# std = [0.0, 0.16180303066028287, 0.16623036320505075, 0.17101373985937138, 0.17830976154590641, 0.18102526958460663, 0.19719325772315205, 0.20472005224306306, 0.21086012844929952, 0.21971294279398412, 0.22713643808728828]
# mean = np.array(mean)
# plt.errorbar(x,mean*100,yerr=0,linestyle='-.', color='green', label="10Gbps")

# mean = [0.0, 0.059877598876069471, 0.060197727456529307, 0.070844918610737898, 0.07817190659763347, 0.088354887131215407, 0.097594573907260604, 0.10554855766730288, 0.11465398183067503, 0.1183382867764369, 0.13223910855627583]
# std = [0.0, 0.15693726637046754, 0.16464578081194978, 0.18152828677331467, 0.20154058793333876, 0.22301083557110554, 0.24324906832339516, 0.25578715429943893, 0.272315194806103, 0.2832657552972182, 0.30392618819341122]
# mean = np.array(mean)
# plt.errorbar(x,mean*100,yerr=0,linestyle='-', color='blue',label="40Gbps")

# mean = [0.0, 0.063012802313355723, 0.073111834822841795, 0.089382777089825671, 0.11185932061492011, 0.13308083773022697, 0.15088229684475563, 0.16780530386181355, 0.18213633120371606, 0.19743411691001986, 0.20950199879976075]
# std = [0.0, 0.16674942776405216, 0.18806911599973905, 0.22020273939415244, 0.27028045436106546, 0.3172122876348874, 0.3545664561047055, 0.38611659927024217, 0.41799249439202046, 0.4487280242144544, 0.47084618867732869]
# mean = np.array(mean)
# plt.errorbar(x,mean*100.0,yerr=0,linestyle='--', color='red',label="100Gbps")



# ax = plt.axes()
# for tick in ax.xaxis.get_major_ticks():
# 	tick.label.set_fontsize(14)
# for tick in ax.yaxis.get_major_ticks():
# 	tick.label.set_fontsize(14)
# plt.legend(bbox_to_anchor=(0.1, 1.02, 0.8, 1.02), loc=3, ncol=3, mode="expand", borderaxespad=0., prop={'size': 16}, frameon=False)
# plt.tight_layout()
#plt.ylim([0,1])


plt.show()