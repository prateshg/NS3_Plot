import pylab as pl
import math
import numpy as np
import sys
import os
from matplotlib import pyplot as plt
import subprocess
import matplotlib.ticker as mticker
from matplotlib.ticker import ScalarFormatter

#INCAST

fig, (ax1,ax2)=plt.subplots(1,2,sharey=True,figsize=(8,3))#,gridspec_kw={'hspace':0.1,'wspace':0.1})
ax1.set_ylabel("CDF", fontsize=17)
fig.text(0.5,0.05, "Measured Buffer Occupancy (MB)", ha="center",fontsize=17)
fig.text(0.3,0.4, "HPCC", ha="center",fontsize=17)
fig.text(0.8,0.4, "DCQCN", ha="center",fontsize=17)
ax1.set_ylim([0.8,1.003])
ax1.set_xlim([0,20])
ax2.set_xlim([0,20])
Buffer_Size1 = [0,0,1090,1090,1090,1090,1090,2180,2180,2180,2180,2180,2180,2180,2180,3270,3270,3270,3270,3270,3270,3270,3270,4360,4360,4360,4360,4360,4360,4360,4360,4360,5450,5450,5450,5450,5450,5450,5450,5883,6540,6540,6540,6540,6540,6540,7630,7630,7630,7630,7630,7630,8720,8720,8720,8720,8720,9810,9810,9810,10900,10900,10900,11990,11990,11990,13080,13080,14170,14170,15260,16350,16350,17440,18530,20710,22890,25070,30520,49050,90470,98100,100280,102460,103550,105730,106820,109000,110090,112270,115540,118810,125350,145506,199470,208190,220180,296480,649640,1630668]
CDF = [0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.3,0.31,0.32,0.33,0.34,0.35,0.36,0.37,0.38,0.39,0.4,0.41,0.42,0.43,0.44,0.45,0.46,0.47,0.48,0.49,0.5,0.51,0.52,0.53,0.54,0.55,0.56,0.57,0.58,0.59,0.6,0.61,0.62,0.63,0.64,0.65,0.66,0.67,0.68,0.69,0.7,0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.8,0.81,0.82,0.83,0.84,0.85,0.86,0.87,0.88,0.89,0.9,0.91,0.92,0.93,0.94,0.95,0.96,0.97,0.98,0.99, 1.0]
Buffer_Size1 = np.array(Buffer_Size1)
ax1.plot(Buffer_Size1/(1e6), CDF, '-.', color='green', label='10 Gbps')

Buffer_Size2 = [0,0,1090,1090,1090,1090,2180,2180,2180,2180,3270,3270,3270,3270,3270,4360,4360,4360,4360,4807,5450,5450,5450,6540,6540,6540,6540,7630,7630,8720,8720,8720,9810,9810,10900,10900,11990,11990,13080,13080,14170,15055,15260,16350,16350,17440,18530,18530,19620,20710,21433,21800,22890,23980,25070,25070,26160,27250,28340,29430,30520,31610,32700,33790,34880,35970,37060,38150,39240,41420,42510,43999,45780,47837,49050,51230,53410,55590,58174,61040,64310,67580,71465,76300,80945,87200,95920,106820,123170,148240,186390,236395,295390,370133,482870,910785,1677164,2487095,3277341,4199282]
Buffer_Size2 = np.array(Buffer_Size2)
ax1.plot(Buffer_Size2/(1e6), CDF, '-', color='blue', label='40 Gbps')

Buffer_Size3 = [0,1090,1090,1090,2180,2180,3270,3270,4360,4360,5450,6540,6540,7630,8720,9810,10900,13080,14170,15260,17440,18530,20710,21800,23980,25070,27250,29430,30520,32700,34880,36380,38150,40330,42510,44690,46870,49050,51087,52997,55231,57770,59950,62130,64310,67580,69760,71940,75210,77674,80660,83930,87200,90470,93740,97010,100280,104640,108103,112270,116630,121421,126440,131890,137340,143880,150420,158050,165997,175490,185670,197693,211460,227810,248471,273229,303020,339246,380165,428370,479600,533120,587510,645847,711049,786560,870733,966404,1091066,1299448,1822851,2754378,3724751,4859104,5750248,6568443,7408273,8193881,8896020,14877612]
Buffer_Size3 = np.array(Buffer_Size3)
ax1.plot(Buffer_Size3/(1e6), CDF, '--', color='red', label='100 Gbps')
for tick in ax1.xaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax1.yaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax2.xaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax2.yaxis.get_major_ticks():
	tick.label.set_fontsize(14)

handles, labels = ax1.get_legend_handles_labels()
plt.figlegend(handles, labels, loc='upper center', ncol=3, labelspacing=0.0, fontsize=16, frameon=False)

Buffer_Size4 = [0,0,0,1020,1020,1020,2040,2040,2040,3060,3060,3060,4080,4080,5100,5100,5100,6120,6120,7140,7140,7140,8160,8160,8160,9180,9180,10200,10200,10200,11220,11220,11220,12240,12240,12240,13260,13260,13663,14280,14280,15300,15300,16320,16320,17340,17340,17830,18360,19056,19380,20400,20400,21420,21420,22440,23460,23460,24480,25500,26520,26520,27540,28560,29580,30600,32640,33660,34680,36720,38760,40800,43860,46920,51000,55080,60180,66300,71400,77520,81600,85680,88740,91800,94860,97442,99960,103020,106424,110160,114623,120360,128520,142800,168865,199920,237981,291720,394462,1199520]
CDF = [0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.3,0.31,0.32,0.33,0.34,0.35,0.36,0.37,0.38,0.39,0.4,0.41,0.42,0.43,0.44,0.45,0.46,0.47,0.48,0.49,0.5,0.51,0.52,0.53,0.54,0.55,0.56,0.57,0.58,0.59,0.6,0.61,0.62,0.63,0.64,0.65,0.66,0.67,0.68,0.69,0.7,0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.8,0.81,0.82,0.83,0.84,0.85,0.86,0.87,0.88,0.89,0.9,0.91,0.92,0.93,0.94,0.95,0.96,0.97,0.98,0.99, 1.0]
Buffer_Size4 = np.array(Buffer_Size4)
ax2.plot(Buffer_Size4/(1e6), CDF, '-.', color='green', label='10 Gbps')

Buffer_Size5 = [0,0,1020,1020,2040,3060,4080,5100,6120,7140,9180,10200,12240,14280,15300,17340,18360,20400,21420,23460,24480,26520,27540,29580,30600,32640,33660,35700,36720,38760,39780,41820,42840,44880,45900,47940,49980,51000,53040,54060,56100,58140,59160,61200,63240,65280,67320,69203,70880,72743,74772,76859,78896,81600,83640,85680,87720,90780,92820,95880,97920,100980,103470,106080,109140,112652,116280,119340,123420,127331,131580,135660,140760,145860,150960,157080,164220,171360,180038,189720,201960,216523,235620,259412,293793,346652,415140,491992,583440,694620,823744,939420,1049191,1150140,1260720,1404891,1758127,2549334,3294858,4754872]
Buffer_Size5 = np.array(Buffer_Size5)
ax2.plot(Buffer_Size5/(1e6), CDF, '-', color='blue', label='40 Gbps')

Buffer_Size6 = [0,1020,2040,4080,8160,12240,17340,22440,27540,32640,37740,42840,47940,53040,58140,62220,67320,72420,76500,81600,86700,91800,96900,102000,107100,112200,117300,122563,128520,133620,139319,144840,150565,156060,162180,168300,174420,181130,187680,194318,201072,208080,215486,223321,230068,238680,246840,255000,263536,273360,283111,293760,305987,317673,330480,343674,358020,374011,392208,411772,433853,456803,485549,519748,557251,603840,660474,728850,804869,890808,977861,1065900,1158848,1250221,1354560,1476848,1603440,1741692,1889440,2019640,2153220,2300100,2457180,2600823,2736660,2910660,3074959,3271140,3516224,3807067,4173696,4614780,5198939,5908568,6691741,7479173,8231448,8951475,9794212,17982158]
Buffer_Size6 = np.array(Buffer_Size6)
ax2.plot(Buffer_Size6/(1e6), CDF, '--', color='red', label='100 Gbps')

fig.tight_layout(rect=[0.0,0.1,1,0.9])


fig, (ax1,ax2)=plt.subplots(1,2,sharey=True,figsize=(8,3))#,gridspec_kw={'hspace':0.1,'wspace':0.1})
ax1.set_ylabel("CDF", fontsize=17)
fig.text(0.5,0.05, "Measured Buffer Occupancy (us)", ha="center",fontsize=17)
fig.text(0.3,0.4, "HPCC", ha="center",fontsize=17)
fig.text(0.8,0.4, "DCQCN", ha="center",fontsize=17)
ax1.set_ylim([0.8,1.003])
ax1.set_xlim([0,60])
ax2.set_xlim([0,60])
ax1.plot((Buffer_Size1)/(3.0*10.0*1e3), CDF, '-.', color='green', label='10 Gbps')
ax1.plot((Buffer_Size2)/(3.0*40.0*1e3), CDF, '-', color='blue', label='40 Gbps')
ax1.plot((Buffer_Size3)/(3.0*100.0*1e3), CDF, '--', color='red', label='100 Gbps')
for tick in ax1.xaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax1.yaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax2.xaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax2.yaxis.get_major_ticks():
	tick.label.set_fontsize(14)

handles, labels = ax1.get_legend_handles_labels()
plt.figlegend(handles, labels, loc='upper center', ncol=3, labelspacing=0.0, fontsize=16, frameon=False)

ax2.plot((Buffer_Size4)/(3.0*10.0*1e3), CDF, '-.', color='green', label='10 Gbps')
ax2.plot((Buffer_Size5)/(3.0*40.0*1e3), CDF, '-', color='blue', label='40 Gbps')
ax2.plot((Buffer_Size6)/(3.0*100.0*1e3), CDF, '--', color='red', label='100 Gbps')
fig.tight_layout(rect=[0.0,0.1,1,0.9])


#Noincast
fig, (ax1,ax2)=plt.subplots(1,2,sharey=True,figsize=(8,3))#,gridspec_kw={'hspace':0.1,'wspace':0.1})
ax1.set_ylabel("CDF", fontsize=17)
fig.text(0.5,0.05, "Measured Buffer Occupancy (MB)", ha="center",fontsize=17)
fig.text(0.3,0.4, "HPCC", ha="center",fontsize=17)
fig.text(0.8,0.4, "DCQCN", ha="center",fontsize=17)
ax1.set_ylim([0.8,1.003])
ax1.set_xlim([0,2])
ax2.set_xlim([0,2])
Buffer_Size1 = [0,0,0,1090,1090,1090,1090,1090,1090,1090,1671,2180,2180,2180,2180,2180,2180,2180,2180,2180,2180,3270,3270,3270,3270,3270,3270,3270,3270,3270,3270,3270,3714,4360,4360,4360,4360,4360,4360,4360,4360,4360,4360,4360,5450,5450,5450,5450,5450,5450,5450,5450,5450,5450,6540,6540,6540,6540,6540,6540,6540,6540,7630,7630,7630,7630,7630,7630,7630,8720,8720,8720,8720,8720,9810,9810,9810,9810,10900,10900,10900,11990,11990,11990,13080,13080,13513,14170,14574,15260,16350,16350,17440,18530,19620,20710,22890,25070,29430,100280]
CDF = [0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.3,0.31,0.32,0.33,0.34,0.35,0.36,0.37,0.38,0.39,0.4,0.41,0.42,0.43,0.44,0.45,0.46,0.47,0.48,0.49,0.5,0.51,0.52,0.53,0.54,0.55,0.56,0.57,0.58,0.59,0.6,0.61,0.62,0.63,0.64,0.65,0.66,0.67,0.68,0.69,0.7,0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.8,0.81,0.82,0.83,0.84,0.85,0.86,0.87,0.88,0.89,0.9,0.91,0.92,0.93,0.94,0.95,0.96,0.97,0.98,0.99, 1.0]
Buffer_Size1 = np.array(Buffer_Size1)
ax1.plot(Buffer_Size1/(1e6), CDF, '-.', color='green', label='10 Gbps')

Buffer_Size2 = [0,0,0,1090,1090,1090,1090,1090,2180,2180,2180,2180,2180,2180,3270,3270,3270,3270,3270,3270,3270,4360,4360,4360,4360,4360,5450,5450,5450,5450,5450,6540,6540,6540,6540,7630,7630,7630,8720,8720,8720,9810,9810,10900,10900,11990,11990,13080,13080,14170,14170,15260,15260,16350,17440,17440,18530,18530,19620,20710,20710,21800,22890,23258,23980,25070,26160,26160,27250,28340,29430,30520,31233,31610,32700,33790,34880,35970,37506,39240,40330,41420,42510,44690,45780,47960,49050,51230,53410,55590,58165,61040,64310,67580,71940,77390,83930,92650,109000,264870]
Buffer_Size2 = np.array(Buffer_Size2)
ax1.plot(Buffer_Size2/(1e6), CDF, '-', color='blue', label='40 Gbps')

Buffer_Size3 = [0,0,1090,1090,1090,2180,2180,2180,2604,3270,3270,4360,4360,4360,5450,5450,6540,7630,7630,8720,9810,10900,11990,13080,14170,15260,16350,17440,18530,20023,21800,22890,23980,25070,26943,28340,29430,30520,32353,33790,34880,35970,38150,39240,40330,42510,43600,45076,46870,47960,50140,51230,53410,54500,56680,57770,59950,61620,63220,65400,67091,68670,70850,73030,75210,77042,79074,81090,83438,85877,88290,90470,92650,95364,98100,100521,103550,106820,109384,112270,115540,119345,123170,126841,130800,135160,140005,144970,150420,155870,162410,169799,177670,187425,197800,210370,226720,249610,287240,654160]
Buffer_Size3 = np.array(Buffer_Size3)
ax1.plot(Buffer_Size3/(1e6), CDF, '--', color='red', label='100 Gbps')
for tick in ax1.xaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax1.yaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax2.xaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax2.yaxis.get_major_ticks():
	tick.label.set_fontsize(14)

handles, labels = ax1.get_legend_handles_labels()
plt.figlegend(handles, labels, loc='upper center', ncol=3, labelspacing=0.0, fontsize=16, frameon=False)

Buffer_Size4 = [0,0,0,1020,1020,1020,1020,2040,2040,2040,2040,3060,3060,3060,4080,4080,4080,4492,5100,5100,5100,6120,6120,6120,7140,7140,7140,7140,8160,8160,8160,8834,9180,9180,9180,10200,10200,10200,10200,11220,11220,11220,11220,12240,12240,12240,12240,13260,13260,13260,13797,14280,14280,14280,15300,15300,15300,16320,16320,16320,17340,17340,17340,18360,18360,18360,19380,19380,20240,20400,20400,21420,21420,22440,22440,23025,23460,23923,24480,25500,25500,26520,26520,27540,28560,28560,29580,30600,31620,32640,33660,34680,35700,37740,38760,41352,43860,47940,54060,111180]
CDF = [0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.3,0.31,0.32,0.33,0.34,0.35,0.36,0.37,0.38,0.39,0.4,0.41,0.42,0.43,0.44,0.45,0.46,0.47,0.48,0.49,0.5,0.51,0.52,0.53,0.54,0.55,0.56,0.57,0.58,0.59,0.6,0.61,0.62,0.63,0.64,0.65,0.66,0.67,0.68,0.69,0.7,0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.8,0.81,0.82,0.83,0.84,0.85,0.86,0.87,0.88,0.89,0.9,0.91,0.92,0.93,0.94,0.95,0.96,0.97,0.98,0.99, 1.0]
Buffer_Size4 = np.array(Buffer_Size4)
ax2.plot(Buffer_Size4/(1e6), CDF, '-.', color='green', label='10 Gbps')

Buffer_Size5 = [0,0,0,1020,1020,2040,2040,3060,4080,5100,6120,7140,8160,9180,10200,11220,13260,14280,15300,16320,17340,18924,20400,21420,22440,23460,24480,25500,27540,28560,29580,30600,31620,32640,33660,34680,36228,37740,38760,39780,40800,41820,42840,44472,45900,46920,47940,49980,51000,52020,53579,55080,56100,58140,59160,60564,62220,63240,65280,66631,68340,69622,71400,73440,74460,76500,78540,79899,81600,83640,85680,87720,89760,91800,93840,95880,98940,100980,103641,106080,109140,112200,115260,118320,121380,125460,129097,133200,137700,142800,147900,153526,160140,167280,175769,185640,198900,216834,245820,549010]
Buffer_Size5 = np.array(Buffer_Size5)
ax2.plot(Buffer_Size5/(1e6), CDF, '-', color='blue', label='40 Gbps')

Buffer_Size6 = [0,0,1020,2040,4080,6120,9180,13260,17340,20400,24480,27540,31620,34680,38760,41820,45900,48960,52020,56100,59160,62220,66300,69360,72420,75644,79045,82620,85680,88740,92028,95880,98940,102000,105810,109140,112918,116280,120360,123420,127500,130939,134640,138720,142207,145860,149639,153000,157080,160797,164554,168636,172380,176460,180540,184620,189233,193291,197880,202359,207060,211188,216240,220893,225420,230520,235620,240720,245941,251940,257040,263160,269189,274891,281149,287640,294780,301920,309060,317079,325207,333540,342703,351343,361259,371280,382500,394296,406338,419634,434520,450525,467606,488696,512044,542066,579329,632400,722078,1469464]
Buffer_Size6 = np.array(Buffer_Size6)
ax2.plot(Buffer_Size6/(1e6), CDF, '--', color='red', label='100 Gbps')

fig.tight_layout(rect=[0.0,0.1,1,0.9])


fig, (ax1,ax2)=plt.subplots(1,2,sharey=True,figsize=(8,3))#,gridspec_kw={'hspace':0.1,'wspace':0.1})
ax1.set_ylabel("CDF", fontsize=17)
fig.text(0.5,0.05, "Measured Buffer Occupancy (us)", ha="center",fontsize=17)
fig.text(0.3,0.4, "HPCC", ha="center",fontsize=17)
fig.text(0.8,0.4, "DCQCN", ha="center",fontsize=17)
ax1.set_ylim([0.8,1.003])
ax1.set_xlim([0,5])
ax2.set_xlim([0,5])
ax1.plot((Buffer_Size1)/(3.0*10.0*1e3), CDF, '-.', color='green', label='10 Gbps')
ax1.plot((Buffer_Size2)/(3.0*40.0*1e3), CDF, '-', color='blue', label='40 Gbps')
ax1.plot((Buffer_Size3)/(3.0*100.0*1e3), CDF, '--', color='red', label='100 Gbps')
for tick in ax1.xaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax1.yaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax2.xaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax2.yaxis.get_major_ticks():
	tick.label.set_fontsize(14)

handles, labels = ax1.get_legend_handles_labels()
plt.figlegend(handles, labels, loc='upper center', ncol=3, labelspacing=0.0, fontsize=16, frameon=False)

ax2.plot((Buffer_Size4)/(3.0*10.0*1e3), CDF, '-.', color='green', label='10 Gbps')
ax2.plot((Buffer_Size5)/(3.0*40.0*1e3), CDF, '-', color='blue', label='40 Gbps')
ax2.plot((Buffer_Size6)/(3.0*100.0*1e3), CDF, '--', color='red', label='100 Gbps')
fig.tight_layout(rect=[0.0,0.1,1,0.9])


#No Incast long lived
plt.figure(figsize=(4,3))
plt.ylabel("Queueing Delay (us)", fontsize=17)
plt.xlabel("Link Speed (Gbps)", fontsize=17)
Speed = [10,40,100]

SlowDown = [37.4,5.8,4.3]
plt.plot(Speed, SlowDown,  '-', color='blue', label='BFC', marker='o')

SlowDown = [19.5,19.2,19.4]
plt.plot(Speed, SlowDown,  '-.', color='green', label='HPCC', marker='s')

SlowDown = [21.8,25.9,29.8]
plt.plot(Speed, SlowDown, '--', color='red', label='DCQCN', marker='^')
ax = plt.axes()
ax.xaxis.set_ticks(Speed)
for tick in ax.yaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax.yaxis.get_minor_ticks():
	tick.label.set_fontsize(14)
for tick in ax.xaxis.get_major_ticks():
	tick.label.set_fontsize(14)
plt.legend(bbox_to_anchor=(-0.1, 1.02, 1.1, 1.02), loc=3, ncol=2, mode="expand", borderaxespad=0., prop={'size': 16}, frameon=False)
plt.tight_layout()

plt.figure(figsize=(3,3))
plt.ylabel("Throughput (%)", fontsize=17)
plt.xlabel("Link Speed (Gbps)", fontsize=17)
Speed = [10,40,100]

SlowDown = [103357,226217,239132]
SlowDown = np.array(SlowDown)
#plt.plot(Speed, SlowDown/625000.0,  '-', color='blue', label='BFC', marker='o')

SlowDown = [170893,151914,139333]
SlowDown = np.array(SlowDown)
plt.plot(Speed, SlowDown/625000.0,  '-.', color='green', label='HPCC', marker='s')

SlowDown = [201208,118933,60478]
SlowDown = np.array(SlowDown)
plt.plot(Speed, SlowDown/625000.0, '--', color='red', label='DCQCN', marker='^')
ax = plt.axes()
ax.xaxis.set_ticks(Speed)
for tick in ax.yaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax.yaxis.get_minor_ticks():
	tick.label.set_fontsize(14)
for tick in ax.xaxis.get_major_ticks():
	tick.label.set_fontsize(14)
plt.legend(bbox_to_anchor=(0.16, 0.8, 1.0, 0.8), loc=3, ncol=1, mode="expand", borderaxespad=0., prop={'size': 16}, frameon=False)
plt.tight_layout()



time = []
for i in range(499):
	time.append(0.1*i)
plt.figure(figsize=(6,3))
plt.ylabel("Fairshare (%)", fontsize=17)
plt.xlabel("Time (ms)", fontsize=17)

Fairshare = [0.257488,0.241520,0.249504,0.249504,0.249504,0.249504,0.249504,0.249504,0.249504,0.249504,0.249504,0.241520,0.257488,0.241520,0.257488,0.241520,0.257488,0.241520,0.249504,0.249504,0.246632,0.257488,0.241520,0.249504,0.249504,0.261784,0.260760,0.265472,0.265472,0.265472,0.257488,0.265472,0.273456,0.257488,0.265472,0.265472,0.265472,0.265472,0.265472,0.281440,0.289424,0.281440,0.289424,0.281440,0.281440,0.281440,0.256656,0.217568,0.217568,0.209584,0.209584,0.201600,0.209584,0.209584,0.220824,0.213216,0.217568,0.225552,0.217568,0.233536,0.218960,0.210760,0.218984,0.214616,0.208352,0.225552,0.217568,0.217568,0.217568,0.225552,0.223568,0.217568,0.233536,0.217568,0.233536,0.225552,0.233536,0.233536,0.242520,0.233536,0.221336,0.227608,0.211320,0.217568,0.209584,0.207760,0.209584,0.200768,0.206872,0.209584,0.217568,0.209584,0.223728,0.205416,0.203592,0.189952,0.195168,0.191008,0.185632,0.193616,0.185632,0.201600,0.185632,0.201600,0.199024,0.193616,0.201600,0.193616,0.201600,0.193616,0.201600,0.201600,0.197352,0.193616,0.185632,0.193616,0.183552,0.186640,0.193616,0.179912,0.185632,0.193616,0.185632,0.193616,0.182904,0.185632,0.183096,0.193616,0.185632,0.193616,0.183512,0.203992,0.193616,0.193616,0.193616,0.209584,0.193616,0.209584,0.201600,0.209584,0.209584,0.217568,0.209584,0.217568,0.209584,0.217568,0.209584,0.217568,0.209584,0.217568,0.217568,0.209584,0.217568,0.209584,0.225552,0.217568,0.225552,0.209584,0.225552,0.222232,0.214360,0.203336,0.209584,0.201600,0.201600,0.201600,0.205616,0.201600,0.201600,0.201600,0.209584,0.201600,0.201600,0.206680,0.196256,0.217568,0.201600,0.199448,0.209584,0.209584,0.201128,0.193616,0.190976,0.185632,0.193328,0.183088,0.185632,0.193616,0.193616,0.201600,0.193616,0.199176,0.201600,0.193616,0.193616,0.193616,0.193008,0.180712,0.187320,0.181632,0.177648,0.185632,0.185632,0.185632,0.177648,0.193616,0.185632,0.193616,0.193616,0.193616,0.185632,0.201600,0.193616,0.193616,0.193616,0.209584,0.201600,0.209584,0.193616,0.209584,0.201600,0.201600,0.201600,0.209584,0.209584,0.209584,0.213584,0.213216,0.209584,0.213600,0.201688,0.217568,0.209584,0.217568,0.217568,0.225552,0.217568,0.217568,0.217568,0.225552,0.217568,0.217568,0.217568,0.225552,0.225552,0.225552,0.225552,0.233536,0.225552,0.225552,0.225552,0.233536,0.225552,0.225552,0.225552,0.233536,0.225552,0.225552,0.233536,0.225552,0.225552,0.225552,0.233536,0.225552,0.225552,0.225552,0.233536,0.225552,0.225552,0.225552,0.233536,0.225552,0.225552,0.225552,0.233536,0.225552,0.233536,0.217568,0.233536,0.225552,0.225552,0.217672,0.225552,0.223136,0.217568,0.217568,0.225552,0.225552,0.225552,0.228608,0.225552,0.225552,0.233536,0.233536,0.219080,0.213512,0.201600,0.213120,0.208512,0.201600,0.206744,0.193616,0.201600,0.193616,0.206536,0.204056,0.209584,0.199664,0.209584,0.197224,0.207488,0.204840,0.201600,0.199680,0.217568,0.205048,0.217568,0.225552,0.236312,0.204528,0.225552,0.207080,0.214504,0.209584,0.217592,0.219528,0.233536,0.225552,0.233536,0.225552,0.241520,0.233536,0.233536,0.233536,0.241520,0.241520,0.265472,0.270672,0.281440,0.281440,0.279456,0.305392,0.313376,0.313376,0.271104,0.257488,0.265472,0.281440,0.281440,0.281440,0.289424,0.281440,0.289424,0.281440,0.289424,0.281440,0.289424,0.281440,0.321360,0.313376,0.314480,0.308592,0.291984,0.277408,0.297408,0.313376,0.321360,0.305392,0.321360,0.305392,0.321360,0.305392,0.321360,0.345312,0.309456,0.321360,0.308280,0.309496,0.361280,0.356816,0.353296,0.295168,0.250176,0.217568,0.233536,0.233536,0.241520,0.241520,0.257488,0.265472,0.281440,0.305392,0.305392,0.305392,0.321360,0.305392,0.313376,0.305392,0.313376,0.292864,0.286904,0.273456,0.289424,0.281440,0.297408,0.313376,0.313376,0.313376,0.313376,0.313376,0.313376,0.305392,0.273456,0.257488,0.273456,0.265472,0.240168,0.257488,0.247120,0.241520,0.265472,0.265472,0.254600,0.249504,0.231640,0.245008,0.249504,0.249504,0.249504,0.249504,0.257488,0.257488,0.265472,0.263984,0.257488,0.249504,0.249504,0.257488,0.249504,0.249504,0.251144,0.257488,0.274904,0.252960,0.249504,0.241520,0.241520,0.249504,0.237272,0.256616,0.289424,0.281440,0.289424,0.281440,0.286960,0.281440,0.297408,0.329344,0.273576,0.252400,0.228376,0.233536,0.233536,0.241520,0.238544,0.241520,0.250032,0.255704,0.257488,0.229144,0.227392,0.233536,0.233536,0.257488,0.241520,0.249504,0.248704,0.249504,0.249504,0.249504,0.265472,0.257488,0.265472,0.257488,0.273456,0.273456,0.289424,0.281440,0.289424,0.281440,0.289424,0.281440,0.289424,0.305392,0.321360,0.305392,0.305392,0.305392,0.313376]
plt.plot(time,Fairshare,  '-', color='blue', label='10Gbps')

Fairshare = [0.185632,0.181640,0.191620,0.211580,0.234814,0.239420,0.279444,0.341320,0.369264,0.363276,0.337120,0.153696,0.176466,0.200512,0.210580,0.178598,0.221064,0.205592,0.207838,0.197502,0.171204,0.160794,0.148704,0.118584,0.119764,0.127104,0.127748,0.128682,0.125484,0.116338,0.122440,0.143186,0.148306,0.163676,0.167668,0.165672,0.165672,0.167668,0.165672,0.154494,0.136736,0.135732,0.147642,0.153158,0.144934,0.129036,0.139724,0.137122,0.123762,0.113806,0.137728,0.173656,0.207588,0.193616,0.203596,0.222560,0.201538,0.229544,0.237528,0.237528,0.239524,0.255492,0.347308,0.365272,0.359284,0.365272,0.365272,0.501000,0.524952,0.471086,0.524348,0.523720,0.491398,0.299006,0.330630,0.476900,0.383130,0.333666,0.345492,0.202316,0.212076,0.295412,0.365272,0.358588,0.366772,0.272868,0.237528,0.241520,0.285432,0.339044,0.344304,0.363276,0.350320,0.329096,0.291908,0.165672,0.245512,0.285432,0.285432,0.249734,0.285432,0.297408,0.277448,0.226614,0.228822,0.205990,0.239524,0.354920,0.327348,0.334108,0.250368,0.270180,0.450484,0.449134,0.187062,0.246896,0.214488,0.283436,0.321160,0.483036,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,0.696184,0.522956,0.522956,0.482296,0.493016,0.510980,0.501000,0.445864,0.522956,0.524952,0.572856,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,0.999290,0.984852,1.000000,1.000000,0.901478,1.000000,0.990478,1.000000,0.879974,0.284356,0.261480,0.296174,0.271082,0.283436,0.273456,0.216970,0.198162,0.193952,0.219564,0.285432,0.285432,0.285432,0.281820,0.221800,0.283436,0.222596,0.205592,0.239524,0.285432,0.285432,0.365272,0.361678,0.301110,0.254288,0.241378,0.193134,0.200796,0.229544,0.285432,0.287428,0.309384,0.365272,0.447108,0.522956,0.522956,0.524952,0.522956,0.522956,0.909590,0.546232,0.713568,0.991386,0.834412,0.520960,0.423872,0.968064,0.472448,0.343874,0.388158,0.327794,0.516968,0.524332,0.522956,0.522956,0.524952,0.522956,0.522956,0.524952,0.522956,0.522956,0.408208,0.481204,0.522956,0.522956,0.409674,0.188572,0.177624,0.164948,0.174952,0.205592,0.205592,0.201498,0.178842,0.165672,0.151512,0.147708,0.199604,0.194660,0.165320,0.183636,0.146314,0.121760,0.125752,0.143716,0.141504,0.142028,0.128246,0.119044,0.122718,0.121262,0.117778,0.123756,0.126958,0.122520,0.115106,0.113776,0.115772,0.119764,0.123756,0.133736,0.135732,0.121260,0.119134,0.129744,0.133736,0.141720,0.153696,0.153696,0.151700,0.153696,0.159684,0.181640,0.183636,0.201600,0.203596,0.207588,0.205592,0.205592,0.205592,0.207588,0.205592,0.221560,0.273456,0.283436,0.295412,0.367268,0.365272,0.302458,0.188980,0.239524,0.296358,0.208224,0.195612,0.236924,0.231084,0.213576,0.237528,0.204070,0.237528,0.223986,0.169566,0.183636,0.203596,0.239524,0.239524,0.233536,0.237528,0.239524,0.185632,0.168300,0.153696,0.163860,0.190166,0.179118,0.195612,0.209584,0.265472,0.289424,0.505320,0.375248,0.361246,0.491004,0.363276,0.475052,0.521992,0.357288,0.246780,0.205910,0.161912,0.193616,0.205592,0.194994,0.184372,0.182506,0.158314,0.167668,0.171124,0.202026,0.180392,0.165672,0.165672,0.167668,0.183354,0.182972,0.182334,0.169352,0.173656,0.183636,0.191620,0.201600,0.158912,0.181640,0.185632,0.200490,0.205592,0.205592,0.207588,0.231540,0.237528,0.235532,0.259484,0.285432,0.285432,0.285432,0.285432,0.313376,0.365272,0.361280,0.365272,0.359284,0.363048,0.380198,0.624752,1.000000,1.000000,1.000000,1.000000,0.998128,1.000000,0.997088,0.986028,0.614286,0.956088,1.000000,1.000000,0.898534,1.000000,1.000000,0.802396,0.477048,1.000000,1.000000,1.000000,1.000000,1.000000,0.990568,0.992736,0.987012,0.999180,0.998894,0.999370,0.836924,0.502352,0.690620,1.000000,1.000000,0.635522,0.423548,0.376644,0.233052,0.245604,0.142576,0.177098]
plt.plot(time,Fairshare,  '-.', color='green', label='40Gbps')

Fairshare = [0.219165,0.322628,0.350901,0.299720,0.164764,0.181620,0.215347,0.188772,0.133662,0.113518,0.120930,0.114572,0.136957,0.148906,0.157688,0.146433,0.152656,0.128351,0.117528,0.132950,0.213576,0.252662,0.218777,0.283835,0.351699,0.454693,0.512976,0.492785,0.411877,0.394276,0.328901,0.204480,0.339445,0.286595,0.245512,0.336813,0.434242,0.284030,0.374853,0.358178,0.261106,0.223826,0.331590,0.366567,0.523565,0.261629,0.297073,0.915370,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,0.882466,0.497008,0.495914,0.473357,0.569662,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,0.993657,0.960591,0.996191,0.506850,0.272811,0.254344,0.181707,0.246310,0.269202,0.234845,0.202014,0.302198,0.325395,0.226450,0.208432,0.272658,0.403595,0.512976,0.632736,0.746401,0.890796,0.561166,0.524932,0.377798,0.512728,0.513774,0.512976,0.510682,0.451871,0.408226,0.150138,0.177368,0.175193,0.137351,0.171678,0.153836,0.107349,0.122472,0.109020,0.101186,0.110270,0.103434,0.098606,0.112978,0.104542,0.116970,0.135333,0.144115,0.169664,0.188027,0.188027,0.191221,0.256690,0.337328,0.326574,0.211722,0.210217,0.211555,0.204185,0.200934,0.172858,0.221560,0.247109,0.177901,0.189116,0.208575,0.430741,0.545042,0.448286,0.443130,0.258535,0.164554,0.175300,0.153494,0.165628,0.153995,0.154382,0.163164,0.157688,0.174146,0.161680,0.187583,0.207189,0.235931,0.269464,0.293416,0.350102,0.405101,0.813556,1.000000,0.999251,0.998835,0.822561,0.999724,0.959690,0.711778,1.000000,1.000000,0.988126,0.999230,0.737854,0.873853,0.623628,0.289154,0.153690,0.215414,0.196829,0.222690,0.202218,0.177597,0.179245,0.218641,0.156500,0.145799,0.180246,0.251899,0.338452,0.350901,0.326699,0.354893,0.512976,0.385989,0.726575,0.904192,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,0.544873,0.230223,0.277712,0.332027,0.324348,0.386030,0.455108,0.506589,0.463130,0.512976,0.299216,0.275030,0.322909,0.507459,0.380588,0.471514,0.512976,0.512976,0.512976,0.511922,0.272852,0.201940,0.203558,0.217568,0.248483,0.222706,0.174830,0.242318,0.245372,0.141991,0.144071,0.148906,0.154245,0.121490,0.102039,0.122558,0.148906,0.146361,0.145934,0.123287,0.151252,0.156792,0.172182,0.143819,0.164874,0.162631,0.120666,0.134232,0.109382,0.093057,0.081407,0.083733,0.111996,0.143994,0.184720,0.242970,0.399559,0.512697,0.494613,0.182774,0.461878,0.512976,0.512976,0.513774,0.512976,0.493016,0.509782,0.512976,0.393382,0.319441,0.554493,0.733768,0.840562,1.000000,0.892412,0.695280,0.373702,0.719019,1.000000,1.000000,0.812810,0.738230,0.996747,0.583053,0.513774,0.508532,0.380679,0.433276,0.358909,0.387961,0.512976,0.363170,0.900068,0.999230,0.725691,0.436295,0.512976,0.987186,0.933097,0.559222,0.329828,1.000000,0.996008,0.324911,0.351699,0.350102,0.294198,0.347707,0.484234,0.512976,0.452968,0.246167,0.227318,0.212521,0.203782,0.164625,0.177608,0.164211,0.219165,0.269464,0.238179,0.213887,0.345549,0.260545,0.267302,0.269212,0.253831,0.232928,0.156875,0.279342,0.313116,0.235383,0.329672,0.283085,0.308710,0.447219,0.490463,0.444275,0.320915,0.210278,0.187089,0.217568,0.191641,0.222015,0.251601,0.452298,0.651467,0.418253,0.246156,0.116056,0.127990,0.148906,0.156091,0.162935,0.140681,0.158988,0.144938,0.112738,0.105481,0.122212,0.135333,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000]
plt.plot(time,Fairshare, '--', color='red', label='100Gbps')
ax = plt.axes()
for tick in ax.yaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax.yaxis.get_minor_ticks():
	tick.label.set_fontsize(14)
for tick in ax.xaxis.get_major_ticks():
	tick.label.set_fontsize(14)
plt.legend(bbox_to_anchor=(-0.1, 1.02, 1.1, 1.02), loc=3, ncol=3, mode="expand", borderaxespad=0., prop={'size': 16}, frameon=False)
plt.tight_layout()
plt.xlim([0,40])



plt.show()