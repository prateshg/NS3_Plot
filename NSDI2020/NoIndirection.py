import pylab as pl
import math
import numpy as np
import sys
import os
from matplotlib import pyplot as plt
import subprocess

plt.figure(figsize=(8,4))
plt.ylabel("FCT Slow Down", fontsize=17)
plt.xlabel("Flow Size (KB)", fontsize=17)
plt.xscale('log')
plt.yscale('log')

Flow_Size = [1, 2, 4, 8, 16, 64, 256, 1024, 2048]
SlowDown = [1.0409246507578456, 1.1202380952380953, 1.2457943925233645, 1.506418918918919, 1.9773913043478262, 3.3389481707317072, 6.1290994623655912, 8.7448688711516542, 8.7526539278131636]
plt.plot(Flow_Size, SlowDown, '-', color='blue', label='BFC (Incast)')

Flow_Size = [1, 2, 4, 8, 16, 64, 256, 1024, 2048]
SlowDown = [1.043534122146528, 77.599404761904765, 89.289033018867926, 104.73506944444445, 123.7004347826087, 142.12483443708609, 139.64546052631579, 83.578441240478782, 35.407218188105119]
plt.plot(Flow_Size, SlowDown, '--', color='red', label='BFC-Indirection (Incast)')

Flow_Size = [1, 2, 4, 8, 16, 64, 256, 1024, 2048]
SlowDown = [1.0412102684617224, 1.0954761904761905, 1.1889018691588784, 1.3827981651376147, 1.7365044247787611, 2.6872242647058822, 4.6828170028818441, 6.3067857142857147, 6.6996746368038744]
plt.plot(Flow_Size, SlowDown, linestyle=':', color='blue', label='BFC')

Flow_Size = [1, 2, 4, 8, 16, 64, 256, 1024, 2048]
SlowDown = [1.0412969316926961, 1.3828571428571428, 1.4963443396226415, 1.676463963963964, 2.0388274336283185, 3.0065476190476192, 4.9776832460732985, 6.5472756410256414, 6.9614611260053616]
plt.plot(Flow_Size, SlowDown, '-.', color='red', label='BFC-Indirection')


ax = plt.axes()
for tick in ax.xaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax.yaxis.get_major_ticks():
	tick.label.set_fontsize(14)
plt.legend(bbox_to_anchor=(0.05, 0.97, 0.9, 0.97), loc=3, ncol=2, mode="expand", borderaxespad=0., prop={'size': 16}, frameon=False)
plt.tight_layout()


plt.figure(figsize=(8,4))
plt.ylabel("CDF", fontsize=17)
plt.xlabel("Buffer Size (MB)", fontsize=17)
#plt.xscale('log')
Buffer_Size = [830764,993480,1061820,1110074,1148748,1181160,1209720,1235672,1259700,1282140,1303560,1322940,1341300,1358640,1374960,1389367,1404540,1418820,1433100,1446360,1459873,1473017,1486140,1499400,1511767,1524026,1536120,1547594,1559580,1571182,1583040,1594260,1605480,1617642,1627920,1640160,1651380,1662919,1674840,1686060,1696722,1707604,1718700,1729920,1741140,1752360,1762683,1774133,1785000,1796220,1807440,1818660,1829880,1840230,1851300,1863158,1874553,1885980,1898220,1909931,1921802,1934169,1946160,1958400,1970640,1983055,1995648,2008380,2021640,2033880,2047140,2060844,2074680,2087940,2102220,2116500,2131800,2146201,2161380,2177821,2194636,2212380,2229607,2247543,2267460,2287860,2309251,2331720,2355180,2381700,2411280,2442039,2478600,2518380,2563260,2618340,2694840,2807040,3009656,3920880]
CDF = [0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.3,0.31,0.32,0.33,0.34,0.35,0.36,0.37,0.38,0.39,0.4,0.41,0.42,0.43,0.44,0.45,0.46,0.47,0.48,0.49,0.5,0.51,0.52,0.53,0.54,0.55,0.56,0.57,0.58,0.59,0.6,0.61,0.62,0.63,0.64,0.65,0.66,0.67,0.68,0.69,0.7,0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.8,0.81,0.82,0.83,0.84,0.85,0.86,0.87,0.88,0.89,0.9,0.91,0.92,0.93,0.94,0.95,0.96,0.97,0.98,0.99, 1.0]
Buffer_Size = np.array(Buffer_Size)
plt.plot(Buffer_Size/(1e6), CDF,'-', color='blue', label='BFC (Incast)')

Buffer_Size = [638502,728280,774180,806945,834360,858193,878220,896705,915504,932406,947580,962306,977160,991440,1004700,1017960,1030200,1042440,1053781,1065900,1077120,1088340,1099689,1111800,1123020,1134240,1145706,1157700,1168920,1180140,1192380,1204620,1216860,1228554,1241340,1254097,1267860,1281120,1295400,1310700,1327020,1345380,1364760,1385160,1408620,1436160,1468800,1510620,1569044,1668720,1836634,2060400,2220663,2327640,2406180,2470440,2526540,2575799,2618461,2656206,2692800,2727480,2759426,2791740,2820686,2849160,2877670,2904192,2930460,2955960,2981590,3004920,3028380,3052018,3075273,3097740,3121326,3145680,3169140,3192600,3216465,3241975,3267060,3292560,3319080,3346865,3375180,3404150,3436573,3470166,3505868,3545075,3586489,3631200,3681180,3740340,3817492,3922920,4103046,5567160]
Buffer_Size = np.array(Buffer_Size)
plt.plot(Buffer_Size/1e6, CDF, '--', color='red', label='BFC-Indirection (Incast)')

Buffer_Size = [6445,14280,20400,25500,29580,33660,36953,40800,43860,46920,49980,52020,55080,57243,60180,62220,65280,67320,69789,72420,74460,76500,79112,81600,83640,85803,88740,90780,92973,95880,97920,100507,103020,105782,108120,111180,113348,116280,119340,122135,124860,127912,131580,134640,137942,141780,145031,148920,153000,157080,161160,165240,169320,173569,178500,183082,187680,192780,197880,202980,208080,212814,217875,222360,227460,232560,237660,242760,247860,252960,257761,263160,267724,273360,278460,283560,288660,293760,299047,304411,310080,315947,321421,327644,334115,340680,347309,354382,362100,370260,378420,387726,397576,409020,421684,436685,455940,480420,520200,788286]
Buffer_Size = np.array(Buffer_Size)
plt.plot(Buffer_Size/1e6, CDF, linestyle=':', color='blue', label='BFC')

Buffer_Size = [7140,14403,20725,25712,30295,33849,37740,40800,43860,46920,49980,52401,55080,58140,60302,63240,65280,67672,70380,72420,74749,77520,79560,81722,84660,86700,88740,91293,93840,95880,98324,100980,103148,106080,108245,111180,113806,116280,119340,122400,125460,128520,131706,135274,138720,142030,145860,149940,153470,157363,161561,166260,170340,174701,179520,184620,188950,193924,199314,204371,209256,214321,219545,224707,229905,235514,240720,245478,250565,255756,261120,266220,271112,275697,281520,286620,291720,297026,302602,308162,314160,320280,326400,332318,338640,345164,351900,359040,366463,375124,383520,392700,402900,414120,426360,441311,459812,485520,524802,853002]
Buffer_Size = np.array(Buffer_Size)
plt.plot(Buffer_Size/(1e6), CDF, '-.', color='red', label='BFC-Indirection')


ax = plt.axes()
for tick in ax.xaxis.get_major_ticks():
	tick.label.set_fontsize(14)
for tick in ax.yaxis.get_major_ticks():
	tick.label.set_fontsize(14)
plt.legend(bbox_to_anchor=(0.05, 0.97, 0.9, 0.97), loc=3, ncol=2, mode="expand", borderaxespad=0., prop={'size': 16}, frameon=False)
plt.tight_layout()

plt.show()